//  _   _  ____   _____ _____
// | \ | |/ __ \ / ____/ ____|
// |  \| | |  | | |   | |
// | . ` | |  | | |   | |
// | |\  | |__| | |___| |____
// |_| \_|\____/ \_____\_____|

// Matrix: Key Numbers
//  0  1  2  3  4  5
//  6  7  8  9 10 11
// 12 13 14 15 16 17

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        //Activates layer 1
        //Switches back to home layer upon press
        //Ignores Mod keys
        sl_ignore_mods: sticky_layer_ignore_mods {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&mo>;
            release-after-ms = <1000>;
            ignore-modifiers;
        };
        //Does not deactivate layer
        //When tapped, next key is Left Shift + Key
        //If held Left Shift Key
        layer_shift: layer_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&sk>;
        };
        //Does not deactivate layer
        //When tapped, next key is Left Command + Key
        //If held Left Command Key
         lcmd_sticky_hold: lcmd_sticky_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&sk>;
        };
        //Does not deactivate layer
        //When tapped, next key is Right Command + Key
        //If held Right Command Key
         rcmd_sticky_hold: rcmd_sticky_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&sk>;
        };
    };
    combos {
        compatible = "zmk,combos";
    //Output: Enter
    combo_space_backspace {
        timeout-ms = <50>;
        key-positions = <14 15>;
        bindings = <&kp ENTER>;
        layers = <0>;
        };
    //Output: Colon
    combo_colon {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&kp COLON>;
        layers = <0>;
        };
    //Output: ESC
    combo_esc {
        timeout-ms = <50>;
        key-positions = <4 5>;
        bindings = <&kp ESCAPE>;
        layers = <0>;
        };
    //Output: 7
    combo_num_seven {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&kp N7>;
        layers = <2>;
        };
    //Output: 8
    combo_num_eight {
        timeout-ms = <50>;
        key-positions = <4 5>;
        bindings = <&kp N8>;
        layers = <2>;
        };
    //Output: 9
    combo_num_nine {
        timeout-ms = <50>;
        key-positions = <9 10>;
        bindings = <&kp N9>;
        layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer { // L0
// ---------------------------------------------- //    // ---------------------------------------------- //
// |      L      |       G       |      D       | //    // |      H      |        U       |      O      | //
// ---------------------------------------------- //    // ---------------------------------------------- //
// |      S      |       R       |    T + L2    | //    // |   N + L2    |        E       |      A      | //
// ---------------------------------------------- //    // ---------------------------------------------- //
// |   I + CMD   |  SPACE + MEH  |  Tab + Shift | //    // |     L1      |   BCK + CNTRL  |      C      | //
// ---------------------------------------------- //    // ---------------------------------------------- //
            bindings = <
&kp L        &kp G            &kp D                      &kp H                &kp U               &kp O
&kp S        &kp R            &lt 2 T                    &lt 2 N              &kp E               &kp A
&mt LCMD I   &mt LSHIFT TAB   &mt LC(LS(LALT)) SPACE     &mt RCTRL BACKSPACE  &sl_ignore_mods 1   &mt RCMD C
            >;
        };
        alphas { // L1
// ---------------------------------------------- //    // ---------------------------------------------- //
// |      V      |       W       |      M       | //    // |      Y      |        F       |      Z      | //
// ---------------------------------------------- //    // ---------------------------------------------- //
// |      J      |       P       |      K       | //    // |      B      |        Q       |      X      | //
// ---------------------------------------------- //    // ---------------------------------------------- //
// |   COMMAND   |   OSM SHIFT   |              | //    // |             |      NONE      |   COMMAND   | //
// ---------------------------------------------- //    // ---------------------------------------------- //
            bindings = <
&kp V   &kp W                &kp M                                   &kp Y   &kp F   &kp Z
&kp J   &kp P                &kp K                                   &kp B   &kp Q   &kp X
&lcmd_sticky_hold LCMD LCMD  &layer_shift LSHIFT LSHIFT   &none      &none   &none  &rcmd_sticky_hold RCMD RCMD
            >;
        };
        nums { // L2
// ---------------------------------------------- //    // ---------------------------------------------- //
// |             |       UP       |             | //    // |      4      |        5       |      6      | //
// ---------------------------------------------- //    // ---------------------------------------------- //
// |     LEFT    |      DOWN      |    RIGHT    | //    // |      1      |        2       |      3      | //
// ---------------------------------------------- //    // ---------------------------------------------- //
// |             |                |             | //    // |             |                |             | //
// ---------------------------------------------- //    // ---------------------------------------------- //
            bindings = <
           &none       &kp UP       &none                              &kp N4   &kp N5   &kp N6
           &kp LEFT    &kp DOWN     &kp RIGHT                          &kp N1   &kp N2   &kp N3
           &none       &none        &none                              &trans   &none    &kp N0
            >;
        };
    };
};
